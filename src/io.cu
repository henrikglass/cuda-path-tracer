#define PRECISION_8 255
#define PRECISION_16 65535

#include "io.cuh"

float ffmin(float a, float b) {
    return (a < b) ? a : b;
}

/**
 * Saves an image to disk.
 *
 * Modified from: https://github.com/henrikglass/erodr/blob/master/src/io.c
 */
void save_ppm(
        const std::string& filepath,
        const Image& img
) {
    FILE *fp = fopen(filepath.c_str(), "w");

    // write "header
    fputs("P6\n", fp);    
    fputs("# Generated by cuda-path-tracer\n", fp);
    fprintf(fp, "%d %d\n", img.resolution.x, img.resolution.y);    
    fprintf(fp, "%d\n", PRECISION_8);    
    
    // write data.
    for (int i = 0; i < img.resolution.x * img.resolution.y; i++) {
        unsigned char color[3];
        color[0] = ffmin(img.buf[i].x, 0.999f) * PRECISION_8;
        color[1] = ffmin(img.buf[i].y, 0.999f) * PRECISION_8;
        color[2] = ffmin(img.buf[i].z, 0.999f) * PRECISION_8;
        fwrite(color, sizeof(char), 3, fp);
    }

    fclose(fp);

    return;
}
